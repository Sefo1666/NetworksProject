<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        body {
            background-image: url("background3.jpg");
            background-repeat: no-repeat;
            background-size: 100%;
        }

        h1 {
            color: white;
            text-align: center;
            -webkit-text-stroke: 1px blue;
        }
    </style>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Search Results</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-2">
        <a class="navbar-brand" style="color: rgb(191, 255, 161)">Search Results</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto"></ul>
            <!-- Updated Search Bar -->
            <div class="search-container">
                <input type="text" id="searchBar" placeholder="Search destinations..." autocomplete="off" />
                <ul id="searchResults"></ul>
            </div>
             
            <style>
                /* Search Container */
                /* Ensure search bar fits within the navbar */
                .search-container {
                    position: relative;
                    width: 250px; /* Adjust width to fit the navbar */
                    margin: 0; /* Remove unnecessary margins */
                    padding: 0;
                    right: 0; /* Align to the far right */
                    display: inline-block; /* Inline element to prevent breaking layout */
                    z-index: 1000;
                }

                #searchBar {
                    width: 100%;
                    padding: 8px 12px; /* Adjust padding for better height */
                    font-size: 14px; /* Reduce font size slightly */
                    border: 1px solid #ccc;
                    border-radius: 20px;
                    outline: none;
                    transition: border-color 0.3s;
                }

                #searchBar:focus {
                    border-color: #28a745; /* Green focus to match navbar theme */
                    box-shadow: none; /* Avoid extra shadows */
                }

                /* Dropdown Results */
                #searchResults {
                    position: absolute;
                    top: 100%;
                    left: 0;
                    right: 0;
                    background: #fff;
                    border: 1px solid #ddd;
                    border-radius: 10px;
                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                    max-height: 200px;
                    overflow-y: auto;
                    display: none;
                    z-index: 1000;
                    padding: 0;
                }
            
                #searchResults li {
                    list-style: none;
                    padding: 10px 15px;
                    font-size: 16px;
                    color: #333;
                    cursor: pointer;
                    transition: background-color 0.2s, color 0.2s;
                }
            
                #searchResults li:hover {
                    background-color: #007BFF;
                    color: white;
                }
            
                /* Add a no-results style */
                #searchResults li.no-results {
                    color: #777;
                    text-align: center;
                    cursor: default;
                }
            </style>

            
        </div>
        <!-- JavaScript for Dynamic Search -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchBar = document.getElementById('searchBar');
            const searchResults = document.getElementById('searchResults');

            searchBar.addEventListener('input', async () => {
                const query = searchBar.value.trim();

                if (query === '') {
                    searchResults.style.display = 'none';
                    searchResults.innerHTML = '';
                    return;
                }

                try {
                    const response = await fetch(`/getsearch?q=${encodeURIComponent(query)}`, {
                        method: 'GET',
                        headers: { 'Accept': 'application/json' }
                    });

                    const data = await response.json();
                    searchResults.innerHTML = '';

                    if (data.results.length > 0) {
                        data.results.forEach(result => {
                            const li = document.createElement('li');
                            li.textContent = result.name;

                            // Make results clickable to redirect
                            li.addEventListener('click', () => {
                                window.location.href = `/${result.name.toLowerCase()}`;
                            });

                            searchResults.appendChild(li);
                        });
                        searchResults.style.display = 'block';
                    } else {
                        searchResults.innerHTML = '<li>Destination not Found</li>';
                        searchResults.style.display = 'block';
                    }
                } catch (error) {
                    console.error('Error fetching search results:', error);
                    searchResults.innerHTML = '<li>Error fetching results</li>';
                    searchResults.style.display = 'block';
                }
            });

            // Prevent Enter key form submission
            searchBar.addEventListener('keydown', (e) => {
                if (e.key === 'Enter') {
                    e.preventDefault();
                }
            });

            // Hide search results when clicking outside
            document.addEventListener('click', (e) => {
                if (!searchBar.contains(e.target) && !searchResults.contains(e.target)) {
                    searchResults.style.display = 'none';
                }
            });
        });
    </script>
</body>
</html>